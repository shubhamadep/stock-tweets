import React, {useState} from 'react';
import {Container, Grid, Button, Typography, TextField, makeStyles, Paper} from '@material-ui/core';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import Icon from '@material-ui/core/Icon';
import { faGoogle, faFacebook  } from '@fortawesome/free-brands-svg-icons';
import FacebookLogin from 'react-facebook-login';
import { GoogleLogin } from 'react-google-login';
import config from '../config/config.json'
import * as actions from '../actions/login';
import { reduxForm, Field } from 'redux-form';
import { connect } from 'react-redux';
import { compose } from 'redux';
const useStyles = makeStyles(theme => ({
    container: {
      display: 'flex',
      flexWrap: 'wrap',
    },
    textField: {
      marginLeft: theme.spacing(1),
      marginRight: theme.spacing(1),
    },
    dense: {
      marginTop: theme.spacing(2),
    },
    menu: {
      width: 200,
    },
    inputFields: {
        width: '100%'
    },
    socialMediaButton: {
        backgroundColor: 'white',
        marginLeft: theme.spacing(4),
        marginTop: theme.spacing(4),
    },
    socialIcons: {
        marginLeft: theme.spacing(1),
    }
  }));

function mapStateToProps(state) {
  return {
    errorMessage: state.auth.errorMessage
  }
}

export default compose(
  connect(mapStateToProps, actions),
  reduxForm({ form: 'signin' })
)(function Login(){
    const classes = useStyles();
    const [isAuthenticated, setIsAuthenticated] = useState(false)
    const [token, setToken] = useState('')
    const [user, setUser] = useState(null)

    const googleResponse = async (response) => {
        debugger;
       /*    await this.props.oauthGoogle(res.accessToken);
    if (!this.props.errorMessage) {
      this.props.history.push('/dashboard');
    }*/
        const tokenBlob = new Blob([JSON.stringify({access_token: response.accessToken}, null, 2)], {type : 'application/json'});
        const options = {
            method: 'POST',
            body: tokenBlob,
            mode: 'cors',
            cache: 'default'
        };
        fetch('http://localhost:5000/users/oauth/google', options).then(r => {
            debugger;
            const token = r.headers.get('access_token');
            console.log(r);
            r.json().then(user => {
                if (token) {
                    this.setState({isAuthenticated: true, user, token})  
                      this.props.history.push('/dashboard');
                }
            });
        })
        console.log(isAuthenticated);
    };
    const facebookResponse = (e) => {};
    
    const onFailure = (error) => {
      alert(error);
    }

    const logout = () => {
        setIsAuthenticated(false)
        setToken('')
        setUser(null)
    }

    return(
        <Container md={12} xs={12} style={{height: '500px', width: '450px'}}>
                <Grid>
                    <Grid item xs={12} md={12} style={{height:'150px'}}>
                        <Grid item xs={12} md={12}>
                            <Typography align="center" variant="h6">Sign in with</Typography>
                        </Grid>
                        <Grid item xs={12} md={12}>
                            <Grid container>
                                <Grid item xs={6} md={6}>
                                    <GoogleLogin
                                        clientId={config.GOOGLE_CLIENT_ID}
                                        buttonText="Login"
                                        onSuccess={googleResponse}
                                        onFailure={googleResponse}
                                    />
                                </Grid>
                                <Grid item xs={6} md={6}>
                                    <FacebookLogin
                                        appId={config.FACEBOOK_APP_ID}
                                        autoLoad={false}
                                        fields="name,email,picture"
                                        callback={facebookResponse} 
                                    />
                                </Grid>
                            </Grid>
                        </Grid>  
                    </Grid>
                    <Grid item xs={12} md={12}>
                        <Grid item xs={12} md={12}>
                            <Typography align="center" variant="h6">Or sign in with credentials</Typography>
                            <form className={classes.container} noValidate autoComplete="off">
                                <Grid item xs={12} md={12}>
                                    <Button variant="contained" className={classes.socialMediaButton}>
                                        <TextField
                                            id="outlined-email-input"
                                            label="Email"
                                            className={classes.textField}
                                            type="email"
                                            name="email"
                                            autoComplete="email"
                                            margin="normal"
                                            variant="outlined"
                                            className={classes.inputFields}
                                        />
                                    </Button>
                                </Grid>
                                <Grid item xs={12} md={12}>
                                    <Button variant="contained" className={classes.socialMediaButton}>
                                        <TextField
                                            id="outlined-password-input"
                                            label="Password"
                                            className={classes.textField}
                                            type="password"
                                            autoComplete="current-password"
                                            margin="normal"
                                            variant="outlined"
                                            className={classes.inputFields}
                                        /> 
                                    </Button>                              
                                </Grid>
                                <Grid item xs={12} md={12}>
                                    <Button align="center">Submit</Button>
                                </Grid>
                                
                            </form>
                        </Grid>

                    </Grid>
                </Grid>
            </Container>
      
    );
})

                                            {/* <Grid item xs={6} md={6}>
                                    <Button variant="contained" className={classes.socialMediaButton}>Google<FontAwesomeIcon  icon={faGoogle}  size="ld" className={classes.socialIcons}/></Button>
                                </Grid>
                                <Grid item xs={6} md={6}>
                                    <Button variant="contained" className={classes.socialMediaButton}>Facebook<FontAwesomeIcon  icon={faFacebook}  size="lg" className={classes.socialIcons}/></Button>
                                </Grid> */}
